name: Weekly Luvit Build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Create Version
        run: |
          echo "VERSION=$(date +%Y%m%d)" >> $GITHUB_ENV
    outputs:
      version: ${{ env.VERSION }}

  build-x86_64-linux:
    needs: setup
    env:
      ARTIFACTS: ${{ github.workspace }}/artifacts
      VERSION: ${{ needs.setup.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v2
      - name: Checkout luvit/luvit
        uses: actions/checkout@v2
        with:
          repository: luvit/luvit
          submodules: true
          path: luvit.git
      - name: Checkout luvit/luvi
        uses: actions/checkout@v2
        with:
          repository: luvit/luvi
          submodules: true
          path: luvi.git
      - name: Checkout luvit/lit
        uses: actions/checkout@v2
        with:
          repository: luvit/lit
          submodules: true
          path: lit.git

      - name: Build
        run: |
          chmod u+x build.sh
          ./build.sh --compress

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TARBALL }}
          path: ${{ env.ARTIFACTS }}/${{ env.TARBALL }}

  build-x86_64-darwin:
    needs: setup
    env:
      ARTIFACTS: ${{ github.workspace }}/artifacts
      VERSION: ${{ needs.setup.outputs.version }}
    runs-on: macos-latest
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v2
      - name: Checkout luvit/luvit
        uses: actions/checkout@v2
        with:
          repository: luvit/luvit
          submodules: true
          path: luvit.git
      - name: Checkout luvit/luvi
        uses: actions/checkout@v2
        with:
          repository: luvit/luvi
          submodules: true
          path: luvi.git
      - name: Checkout luvit/lit
        uses: actions/checkout@v2
        with:
          repository: luvit/lit
          submodules: true
          path: lit.git

      - name: Install Dependencies
        run: |
          brew install coreutils

      - name: Build
        run: |
          chmod u+x build.sh
          ./build.sh --compress

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TARBALL }}
          path: ${{ env.ARTIFACTS }}/${{ env.TARBALL }}

  build-x86_64-windows:
    needs: setup
    env:
      ARTIFACTS: ${{ github.workspace }}/artifacts
      VERSION: ${{ needs.setup.outputs.version }}
    runs-on: windows-latest
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v2
      - name: Checkout luvit/luvit
        uses: actions/checkout@v2
        with:
          repository: luvit/luvit
          submodules: true
          path: luvit.git
      - name: Checkout luvit/luvi
        uses: actions/checkout@v2
        with:
          repository: luvit/luvi
          submodules: true
          path: luvi.git
      - name: Checkout luvit/lit
        uses: actions/checkout@v2
        with:
          repository: luvit/lit
          submodules: true
          path: lit.git

      - name: Cache Dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: C:\Program Files\NASM
          key: ${{ runner.os }}-nasm

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          choco install NASM

      - name: Setup PATH
        shell: pwsh
        run: |
          Write-Output "C:\Program Files\NASM" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build
        shell: pwsh
        run: |
          ./build.ps1 --compress

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TARBALL }}
          path: ${{ env.ARTIFACTS }}/${{ env.TARBALL }}

  build-linux-arm:
    needs: setup
    env:
      ARTIFACTS: ${{ github.workspace }}/artifacts
      VERSION: ${{ needs.setup.outputs.version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [armv6, armv7, aarch64]
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v2
      - uses: uraimo/run-on-arch-action@v2.0.7
        name: Build
        with:
          distro: buster
          arch: ${{ matrix.arch }}

          setup: |
            mkdir -p "${ARTIFACTS}"
          shell: /bin/bash
          dockerRunArgs: |
            --env GITHUB_ENV
            --env ARTIFACTS
            --env VERSION
            --volume '"${ARTIFACTS}:${ARTIFACTS}"'
            --volume '"${GITHUB_ENV}:${GITHUB_ENV}"'
          install: |
            apt-get update -q -y
            apt-get install -q -y perl git make cmake g++ libc-dev libc++-dev
          run: |
            git clone https://github.com/luvit/luvit luvit.git --recursive --depth 1
            git clone https://github.com/luvit/luvi luvi.git --recursive --depth 1
            git clone https://github.com/luvit/lit lit.git --recursive --depth 1

            chmod u+x build.sh
            ./build.sh --compress

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TARBALL }}
          path: ${{ env.ARTIFACTS }}/${{ env.TARBALL }}

  release:
    needs:
      [setup, build-x86_64-linux, build-x86_64-darwin, build-x86_64-windows, build-linux-arm]
    env:
      ARTIFACTS: ${{ github.workspace }}/artifacts
      VERSION: ${{ needs.setup.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout truemedian/luvit-bin
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.15.0"

      - name: Setup GHR
        run: |
          go get -u github.com/tcnksm/ghr

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ env.ARTIFACTS }}

      - name: Collect Artifacts
        run: |
          mkdir -p releases/
          cp ${{ env.ARTIFACTS }}/**/* releases/

      - name: Upload Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ghr \
            -n "Luvit ${{ env.VERSION }}" \
            -b "Weekly Luvit Binary Release" \
            "${{ env.VERSION }}" releases/
